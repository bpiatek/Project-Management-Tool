{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/project/ProjectItem.js","components/project/CreateProjectButton.js","components/Dashboard.js","components/layout/Header.js","components/project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/index.js","store.js","components/project/UpdateProject.js","components/projectBoard/projecttask/ProjectTask.js","actions/backlogActions.js","components/projectBoard/Backlog.js","components/projectBoard/ProjectBoard.js","components/projectBoard/projecttask/AddProjectTask.js","components/projectBoard/projecttask/UpdateProjectTask.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","this","_x","apply","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","project_CreateProjectButton","map","project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","Header","data-toggle","data-target","href","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","startDate","endDate","errors","onChange","assertThisInitialized","onSubmit","nextProps","nextContext","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","initalState","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlogId","projectTaskId","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","projecttask_ProjectTask","toDoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","boardContent","projectNotFound","role","projectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","projectTask","UpdateProjectTask","createdAt","_nextProps$project_ta","_this$props$match$par","getProjectTask","updateProjectTask","patch","App","es","BrowserRouter","layout_Header","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e2d4bb2.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {DELETE_PROJECT, GET_ERRORS, GET_PROJECT, GET_PROJECTS} from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/project\", project);\n        history.push(\"/dashboard\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (e) {\n        dispatch({\n            type:GET_ERRORS,\n            payload: e.response.data\n        });\n    }\n};\n\nexport const getProjects = () => async dispatch => {\n        const res = await axios.get(\"/api/project/all\");\n        dispatch({\n            type: GET_PROJECTS,\n            payload: res.data\n        });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/project/${id}`);\n        dispatch({\n            type: GET_PROJECT,\n            payload: res.data\n        });\n    } catch (err) {\n        history.push(\"/dashboard\");\n    }\n};\n\nexport const deleteProject = id => async dispatch => {\n    if (window.confirm(\"Dou you really want to delete this project?\")) {\n        await axios.delete(`/api/project/${id}`);\n        dispatch({\n            type: DELETE_PROJECT,\n            payload: id\n        });\n    }\n\n};","// DASHBOARD\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//BACKLOG\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {deleteProject} from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass ProjectItem extends Component {\n    onDeleteClick = id => {\n      this.props.deleteProject(id);\n    };\n\n    render() {\n        const {project} = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>{project.projectName}</h3>\n                            <p>{project.description}</p>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                    </li>\n                                </Link>\n\n                                    <li className=\"list-group-item delete\" onClick={this.onDeleteClick\n                                        .bind(this, project.projectIdentifier)}>\n                                        <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                                    </li>\n\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(null, {deleteProject})(ProjectItem);","import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n    return(\n        <React.Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                Create a Project\n            </Link>\n        </React.Fragment>\n    )\n};\n\nexport default CreateProjectButton;","import React, {Component} from 'react';\nimport ProjectItem from \"./project/ProjectItem\";\nimport CreateProjectButton from \"./project/CreateProjectButton\";\nimport {getProjects} from \"../actions/projectActions\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n\n    componentDidMount() {\n        this.props.getProjects();\n    }\n\n    render() {\n        const {projects} = this.props.project;\n\n        return (\n            <div className=\"projects\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Projects</h1>\n                            <br/>\n                            <CreateProjectButton/>\n                            <br/>\n                            <hr/>\n                            { projects.map(project => (\n                                <ProjectItem key={project.id} project = {project}/>\n                                ))\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    project: state.project\n});\n\nDashboard.propTypes = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, {getProjects})(Dashboard);","import React, {Component} from 'react';\nimport Link from \"react-router-dom/es/Link\";\n\nclass Header extends Component {\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n                    <div className=\"container\">\n                        <Link  to={`/`} className=\"navbar-brand\">\n                            JIRA Like Tool by Bartosz Piątek\n                        </Link>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                                data-target=\"#mobile-nav\">\n                            <span className=\"navbar-toggler-icon\"/>\n                        </button>\n\n                        <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link\" href=\"/dashboard\">\n                                        Dashboard\n                                    </a>\n                                </li>\n                            </ul>\n\n                            <ul className=\"navbar-nav ml-auto\">\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link \" href=\"register.html\">\n                                        Sign Up\n                                    </a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link\" href=\"login.html\">\n                                        Login\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport {createProject} from \"../../actions/projectActions\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n\n\n    constructor() {\n        super();\n        this.state = {\n            \"projectName\": \"\",\n            \"projectIdentifier\": \"\",\n            \"description\": \"\",\n            \"startDate\": \"\",\n            \"endDate\": \"\",\n            \"errors\":{}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]:e.target.value})\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newProject = {\n            \"projectName\": this.state.projectName,\n            \"projectIdentifier\": this.state.projectIdentifier,\n            \"description\": this.state.description,\n            \"startDate\": this.state.startDate,\n            \"endDate\": this.state.endDate,\n        };\n\n        this.props.createProject(newProject, this.props.history);\n    }\n\n\n    render() {\n        const {errors} = this.state;\n\n        return (\n            <div className=\"project\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Create / Edit Project</h5>\n                            <hr/>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\"\n                                           className={classnames(\"form-control form-control-lg\", {\n                                               \"is-invalid\": errors.projectName\n                                           })}\n                                           placeholder=\"Project Name\"\n                                           name=\"projectName\"\n                                           value={this.state.projectName}\n                                           onChange={this.onChange}\n                                    />\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.projectName}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\"\n                                           className={classnames(\"form-control form-control-lg\", {\n                                               \"is-invalid\":errors.projectIdentifier\n                                           })}\n                                           placeholder=\"Unique Project ID\"\n                                           name=\"projectIdentifier\"\n                                           value={this.state.projectIdentifier}\n                                           onChange={this.onChange}\n                                    />\n                                    {errors.projectIdentifier && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.projectIdentifier}\n                                        </div>\n                                    )}\n                                </div>\n                                {\n                                    //disabled for Edit Only!! remove \"disabled\" for the Create operation\n                                }\n                                <div className=\"form-group\">\n                                    <textarea className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\":errors.description\n                                    })}\n                                              placeholder=\"Project Description\"\n                                              name=\"description\"\n                                              value={this.state.description}\n                                              onChange={this.onChange}\n                                    >\n                                    </textarea>\n                                    {errors.description && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.description}\n                                        </div>\n                                    )}\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\"\n                                           className=\"form-control form-control-lg\"\n                                           name=\"startDate\"\n                                           value={this.state.startDate}\n                                           onChange={this.onChange}\n                                    />\n                                </div>\n                                <h6>Estimated End Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\"\n                                           className=\"form-control form-control-lg\"\n                                           name=\"endDate\"\n                                           value={this.state.endDate}\n                                           onChange={this.onChange}\n                                    />\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\"/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nAddProject.propTypes = {\n    createProject: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n   errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { createProject }\n)(AddProject);","import {GET_ERRORS} from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {DELETE_PROJECT, GET_PROJECT, GET_PROJECTS} from \"../actions/types\";\n\nconst initialState = {\n    projects: [],\n    project: {}\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            };\n        case GET_PROJECT:\n            return {\n                ...state,\n                project: action.payload\n            };\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\n            };\n        default:\n            return state;\n    }\n}","import {DELETE_PROJECT_TASK, GET_BACKLOG, GET_PROJECT_TASK} from \"../actions/types\";\n\nconst initialState = {\n    project_tasks: [],\n    project_task: {}\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks: action.payload\n            };\n\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            };\n\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks: state.project_tasks.filter(\n                    project_tasks => project_tasks.projectSequence !== action.payload)\n            };\n\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\n\nexport default combineReducers({\n    errors: errorReducer,\n    project: projectReducer,\n    backlog: backlogReducer\n});","import {createStore, applyMiddleware, compose} from \"redux\"\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\"\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n    store = createStore(\n        rootReducer,\n        initalState,\n        compose(\n            applyMiddleware(...middleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )\n    );\n} else {\n    store = createStore(\n        rootReducer,\n        initalState,\n        compose(applyMiddleware(...middleware))\n    );\n}\n\n\nexport default store;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {createProject, getProject} from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            \"id\": \"\",\n            \"projectName\": \"\",\n            \"projectIdentifier\": \"\",\n            \"description\": \"\",\n            \"startDate\": \"\",\n            \"endDate\": \"\",\n            \"errors\":{}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            startDate,\n            endDate\n        } = nextProps.project;\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            startDate,\n            endDate\n        });\n    }\n\n    componentDidMount() {\n        const {id} = this.props.match.params;\n        this.props.getProject(id, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const updateProject = {\n            \"id\": this.state.id,\n            \"projectName\": this.state.projectName,\n            \"projectIdentifier\": this.state.projectIdentifier,\n            \"description\": this.state.description,\n            \"startDate\": this.state.startDate,\n            \"endDate\": this.state.endDate,\n        };\n\n        this.props.createProject(updateProject, this.props.history)\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"project\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\n                            <hr/>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\"\n                                           className={classnames(\"form-control form-control-lg\", {\n                                             \"is-invalid\": errors.projectName\n                                           })}\n                                           name=\"projectName\"\n                                           placeholder=\"Project Name\"\n                                           value={this.state.projectName}\n                                           onChange={this.onChange}\n                                    />\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.projectName}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\"\n                                           className=\"form-control form-control-lg\"\n                                           name=\"projectIdentifier\"\n                                           placeholder=\"Unique Project ID\"\n                                           value={this.state.projectIdentifier}\n                                           onChange={this.onChange}\n                                           disabled/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": errors.description\n                                        })}\n                                          name=\"description\"\n                                          placeholder=\"Project Description\"\n                                          value={this.state.description}\n                                          onChange={this.onChange}\n                                    >\n                                    </textarea>\n                                    {errors.description && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.description}\n                                        </div>\n                                    )}\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\"\n                                           className=\"form-control form-control-lg\"\n                                           name=\"startDate\"\n                                           value={this.state.startDate}\n                                           onChange={this.onChange}\n                                    />\n                                </div>\n                                <h6>Estimated End Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\"\n                                           className=\"form-control form-control-lg\"\n                                           name=\"endDate\"\n                                           value={this.state.endDate}\n                                           onChange={this.onChange}\n                                    />\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"Submit\"/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired,\n    createProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    {getProject, createProject}\n    )(UpdateProject);","import React, {Component} from 'react';\nimport Link from \"react-router-dom/es/Link\";\nimport {connect} from \"react-redux\";\nimport {deleteProjectTask} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass ProjectTask extends Component {\n    onDeleteClick(backlogId, projectTaskId) {\n        this.props.deleteProjectTask(backlogId, projectTaskId);\n    };\n\n    render() {\n        const {project_task} = this.props;\n        let priorityString;\n        let priorityClass;\n\n        if (project_task.priority === 1) {\n            priorityClass = \"bg-danger text-light\"\n            priorityString = \"HIGH\"\n        }\n        if (project_task.priority === 2) {\n            priorityClass = \"bg-warning text-light\"\n            priorityString = \"MEDIUM\"\n        }\n        if (project_task.priority === 3) {\n            priorityClass = \"bg-info text-light\"\n            priorityString = \"LOW\"\n        }\n\n        return (\n        <div className=\"card mb-1 bg-light\">\n\n            <div className={`card-header text-primary text-center ${priorityClass}`}>\n                ID: {project_task.projectIdentifier} -- Priority: {priorityString}\n            </div>\n            <div className=\"card-body bg-light\">\n                <h5 className=\"card-title\">{project_task.summary}</h5>\n                <p className=\"card-text text-truncate \">\n                    {project_task.acceptanceCriteria}\n                </p>\n                <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\n                    View / Update\n                </Link>\n\n                <button className=\"btn btn-danger ml-4\"\n                    onClick={this.onDeleteClick.bind(\n                        this,\n                        project_task.projectIdentifier,\n                        project_task.projectSequence\n                    )}\n                >\n                    Delete\n                </button>\n            </div>\n        </div>\n        );\n    }\n}\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\n\n\nexport default connect(\n    null,\n    {deleteProjectTask}\n)(ProjectTask);","import axios from \"axios\";\nimport {DELETE_PROJECT_TASK, GET_BACKLOG, GET_ERRORS, GET_PROJECT_TASK} from \"./types\";\n\nexport const addProjectTask = (id, projectTask, history) => async dispatch => {\n    try {\n        await axios.post(`/api/backlog/${id}`, projectTask);\n        history.push(`/projectBoard/${id}`);\n        dispatch({\n                     type: GET_ERRORS,\n                     payload: {}\n                 });\n    } catch (e) {\n        dispatch({\n                     type: GET_ERRORS,\n                     payload: e.response.data\n                 });\n    }\n};\n\nexport const getBacklog = (id) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${id}`);\n        dispatch({\n                     type: GET_BACKLOG,\n                     payload: res.data\n                 });\n    } catch (e) {\n        dispatch({\n                     type: GET_ERRORS,\n                     payload: e.response.data\n                 });\n    }\n};\n\nexport const getProjectTask = (backlogId, projectTaskId, history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlogId}/${projectTaskId}`);\n        dispatch({\n                     type: GET_PROJECT_TASK,\n                     payload: res.data\n                 });\n    } catch (e) {\n        history.push(\"/dashboard\");\n    }\n};\n\nexport const updateProjectTask = (backlogId, projectTaskId, projectTask, history) => async dispatch => {\n    try {\n        await axios.patch(`/api/backlog/${backlogId}/${projectTaskId}`, projectTask);\n        history.push(`/projectBoard/${backlogId}`);\n        dispatch({\n                     type: GET_ERRORS,\n                     payload: {}\n                 });\n    } catch (e) {\n        dispatch({\n                     type: GET_ERRORS,\n                     payload: e.response.data\n                 });\n    }\n};\n\nexport const deleteProjectTask = (backlogId, projectTaskId) => async dispatch => {\n    if (window.confirm(`Dou you really want to delete this project task? ${projectTaskId}`)) {\n        await axios.delete(`/api/backlog/${backlogId}/${projectTaskId}`);\n        dispatch({\n                     type: DELETE_PROJECT_TASK,\n                     payload: projectTaskId\n                 });\n    }\n\n};\n","import React, {Component} from 'react';\nimport ProjectTask from \"./projecttask/ProjectTask\";\n\nclass Backlog extends Component {\n    render() {\n        const {project_tasks_prop} = this.props;\n        const tasks = project_tasks_prop.map(project_tasks => (\n           <ProjectTask key={project_tasks.id} project_task={project_tasks}/>\n        ));\n        \n        let toDoItems = [];\n        let inProgressItems = [];\n        let doneItems = [];\n\n        for (let i = 0; i < tasks.length; i++) {\n            if (tasks[i].props.project_task.status === \"TO_DO\") {\n                toDoItems.push(tasks[i]);\n            }\n\n            if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n                inProgressItems.push(tasks[i]);\n            }\n\n            if (tasks[i].props.project_task.status === \"DONE\") {\n                doneItems.push(tasks[i]);\n            }\n        }\n\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-secondary text-white\">\n                                <h3>TO DO</h3>\n                            </div>\n                        </div>\n                        {toDoItems}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-primary text-white\">\n                                <h3>In Progress</h3>\n                            </div>\n                        </div>\n                        {inProgressItems}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-success text-white\">\n                                <h3>Done</h3>\n                            </div>\n                        </div>\n                        {doneItems}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Backlog;","import React, {Component} from 'react';\nimport Link from \"react-router-dom/es/Link\";\nimport Backlog from \"./Backlog\";\nimport {connect} from \"react-redux\";\nimport {getBacklog} from \"../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass ProjectBoard extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n        const {id} = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    render() {\n        const {id} = this.props.match.params;\n        const {project_tasks} = this.props.backlog;\n        const {errors} = this.state;\n\n        let boardContent;\n\n        const boardAlgorithm = (errors, project_tasks) => {\n            if (project_tasks.length < 1) {\n                if (errors.projectNotFound) {\n                    return (\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\n                            {errors.projectNotFound}\n                        </div>\n                    );\n                } else {\n                    return (\n                        <div className=\"alert alert-info text-center\" role=\"alert\">\n                            No Project Tasks on this board\n                        </div>\n                    );\n                }\n            } else {\n                return <Backlog project_tasks_prop={project_tasks}/>\n            }\n        };\n\n        boardContent = boardAlgorithm(errors, project_tasks);\n\n        return (\n            <div className=\"container\">\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n                </Link>\n                <br/>\n                <hr/>\n                {boardContent}\n            </div>\n        );\n    }\n}\n\nProjectBoard.propTypes = {\n    backlog: PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    backlog: state.backlog,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, {getBacklog})(ProjectBoard);","import React, {Component} from 'react';\nimport Link from \"react-router-dom/es/Link\";\nimport {connect} from \"react-redux\";\nimport {addProjectTask} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass AddProjectTask extends Component {\n\n    constructor(props) {\n        super(props);\n        const {id} = this.props.match.params;\n\n        this.state = {\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            projectIdentifier: id,\n            errors:{}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit= this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.errors) {\n            this.setState({errors: nextProps.errors})\n        }\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]:e.target.value})\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newTask = {\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate,\n        };\n\n        this.props.addProjectTask(\n            this.state.projectIdentifier,\n            newTask,\n            this.props.history\n        );\n    }\n\n    render() {\n        const {id} = this.props.match.params;\n        const {errors} = this.state;\n        return (\n            <div className=\"add-project-task\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to = {`/projectBoard/${id}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": errors.summary\n                                    })}\n                                           name=\"summary\"\n                                           placeholder=\"Project Task summary\"\n                                           value={this.state.summary}\n                                           onChange={this.onChange}\n                                    />\n                                    {errors.summary && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.summary}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\"\n                                              name=\"acceptanceCriteria\" value={this.state.acceptanceCriteria}\n                                              onChange={this.onChange}>\n                                    </textarea>\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\"\n                                        value={this.state.dueDate} onChange={this.onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" name=\"priority\"\n                                            value={this.state.priority} onChange={this.onChange}>\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" name=\"status\"\n                                            value={this.state.status} onChange={this.onChange}>\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\"/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddProjectTask.propTypes = {\n    addProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    {addProjectTask}\n    )(AddProjectTask);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {getProjectTask, updateProjectTask} from \"../../../actions/backlogActions\";\nimport {connect} from \"react-redux\";\nimport Link from \"react-router-dom/es/Link\";\nimport classnames from \"classnames\";\n\nclass UpdateProjectTask extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: \"\",\n            projectIdentifier: \"\",\n            dueDate: \"\",\n            createdAt: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n\n        const {\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            projectIdentifier,\n            dueDate,\n            createdAt\n        } = nextProps.project_task;\n\n        this.setState({\n                          id,\n                          projectSequence,\n                          summary,\n                          acceptanceCriteria,\n                          status,\n                          priority,\n                          projectIdentifier,\n                          dueDate,\n                          createdAt\n                      });\n    }\n\n    componentDidMount() {\n        const {backlogId, projectTaskId} = this.props.match.params;\n        this.props.getProjectTask(backlogId, projectTaskId, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const updateProjectTask = {\n            id: this.state.id,\n            projectSequence: this.state.projectSequence,\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            projectIdentifier: this.state.projectIdentifier,\n            dueDate: this.state.dueDate,\n            createdAt: this.state.createdAt\n        };\n\n        this.props.updateProjectTask(this.state.projectIdentifier,\n                                     this.state.projectSequence,\n                                     updateProjectTask,\n                                     this.props.history);\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"update-project-task\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\n                            <p className=\"lead text-center\">\n                                Project Name: {this.state.projectIdentifier}<br/>\n                                Task ID: {this.state.projectSequence}\n                            </p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.summary\n                                        })}\n                                        name=\"summary\"\n                                        placeholder=\"Project Task summary\"\n                                        value={this.state.summary}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.summary && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.summary}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                  <textarea\n                                      className=\"form-control form-control-lg\"\n                                      placeholder=\"Acceptance Criteria\"\n                                      name=\"acceptanceCriteria\"\n                                      value={this.state.acceptanceCriteria}\n                                      onChange={this.onChange}\n                                  />\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control form-control-lg\"\n                                        name=\"dueDate\"\n                                        value={this.state.dueDate}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control form-control-lg\"\n                                        name=\"priority\"\n                                        value={this.state.priority}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control form-control-lg\"\n                                        name=\"status\"\n                                        value={this.state.status}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block mt-4\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nUpdateProjectTask.propTypes = {\n    getProjectTask: PropTypes.func.isRequired,\n    updateProjectTask: PropTypes.func.isRequired,\n    project_task: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    {getProjectTask, updateProjectTask}\n)(UpdateProjectTask);","import React, { Component } from 'react';\nimport './App.css';\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport AddProject from \"./components/project/AddProject\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/project/UpdateProject\";\nimport ProjectBoard from \"./components/projectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/projectBoard/projecttask/AddProjectTask\";\nimport UpdateProjectTask from \"./components/projectBoard/projecttask/UpdateProjectTask\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div className=\"App\">\n                        <Header />\n                        <Route exact path=\"/dashboard\" component={Dashboard} />\n                        <Route exact path=\"/addProject\" component={AddProject} />\n                        <Route exact path=\"/updateProject/:id\" component={UpdateProject} />\n                        <Route exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n                        <Route exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n                        <Route exact path=\"/updateProjectTask/:backlogId/:projectTaskId\" component={UpdateProjectTask} />\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}